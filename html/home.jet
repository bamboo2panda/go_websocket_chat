<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css" integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .chatbox {
            outline: 1px solid silver;
            min-height: 160px;
            padding: 0.5em;
        }   
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-3">This is the home page</h1>
                <hr/>

            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <h3>Chat</h3>
                <p><a href="https://github.com">Go to github</a></p>
                <div class="form-group">
                    <label for="username">Username:</label>
                    <input type="text" name="username" id="username" class="form-control" autocomplete="">
                </div>
                <div class="form-group">
                    <label for="message">Message:</label>
                    <input type="text" name="messate" id="message" class="form-control" autocomplete="">
                </div>
                <hr>
                <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Send message</a>

                <input type="hidden" name="action" id="action" />

                <hr />
                <div id="output" class="chatbox">

                </div>
            </div>
            <div class="col-md-4">
                <h3>
                    Who's online
                </h3>

                <ul id="online_users"></ul>
            </div>
        </div>
    </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js" integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
    let socket = null;
    let outputField = document.getElementById("output");
    let userField = document.getElementById("username");
    let messageField = document.getElementById("message");

    window.onbeforeunload = function() {
        console.log("Leaving");
        let jsonData = {};
        jsonData["action"] = "left";
        socket.send(JSON.stringify(jsonData));
    }

    document.addEventListener("DOMContentLoaded", function(){
        socket = new WebSocket("ws://127.0.0.1:8081/ws");

        socket.onopen = () => {
            console.log("Successfully connected")
        }

        socket.onclose = () => {
            console.log("Connection closed");
        }

        socket.onerror = error => {
            console.log("There is an arror")
        }

        socket.onmessage = msg => {
            // console.log(msg);
            // let j = JSON.parse(msg.data)
            // console.log(j)

            let data = JSON.parse(msg.data)
            console.log("Action:", data.action)

            switch (data.action) {
                case "list_users":
                    let ul = document.getElementById("online_users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);

                    if (data.connected_users.length > 0){
                        data.connected_users.forEach(item => {
                            let li = document.createElement("li");
                            li.appendChild(document.createTextNode(item));
                            ul.appendChild(li);
                        });
                    }
                    break;
                case "broadcast":
                    outputField.innerHTML = outputField.innerHTML + data.message + "<br />";
                    break;
            }
        }

        userField.addEventListener("change", function() {
            let jsonData = {};
            jsonData["action"] = "username";
            jsonData["username"] = this.value;
            socket.send(JSON.stringify(jsonData));
        })

        messageField.addEventListener("keydown", function(event) {
            if (event.code === "Enter"){
                if (!socket){
                    console.log("No connection");
                    return false;
                }
                if ((userField.value === "") || (messageField.value === "")){
                    errorMessage("Fill out username and message");
                    return false;
                }else {
                    sendMessage();
                }
                event.preventDefault();
                event.stopPropagation();
                
                
            }
        })

        document.getElementById("sendBtn").addEventListener("click", function() {
            if ((userField.value === "") || (messageField.value === "")){
                errorMessage("Fill out username and message");
                return false;
            }
            sendMessage();
        })
    });

    function sendMessage() {
        let jsonData = {};
        jsonData["action"] = "broadcast";
        jsonData["username"] = userField.value;
        jsonData["message"] = messageField.value;
        console.log(jsonData);
        socket.send(JSON.stringify(jsonData));
        messageField.value = "";
    }

    function errorMessage(msg) {
        notie.alert({
                    type: "error", // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
                    text: msg,
                    })
    }

</script>
</html>